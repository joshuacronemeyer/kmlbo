#!/usr/bin/env ruby

require 'optparse'
Dir["#{File.dirname(__FILE__)}/lib/**/*.rb"].each {|file| require file }

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: kmlbo kmlfile outputfile [options]"
  opts.on("-s", "--simplify [EPSILON]", Float, "Simplify the path using the Douglas Peucker algorithm (optionally using EPSILON as simplification factor)") do |epsilon|
    options[:simplify] = true
    options[:epsilon] = epsilon
  end
  opts.on("-m", "--multipass [PASSES]", Integer, "Make n=PASSES # of passes over the same path. If passes not specified defaults to 1.") do |passes|
    options[:passes] = passes
  end
  opts.on("-k", "--kml", "Emit kml instead of ruby") do |kml|
    options[:kml] = true
  end
end

option_parser.parse!

kml_file = ARGV[0]
output_file = ARGV[1]

if (kml_file == nil || output_file == nil)
  puts "Missing required argument."
  puts  option_parser.banner
  exit 1
end

if options[:simplify]
  coordinates = KML.new(kml_file).simplify!(options[:epsilon], options[:passes])
else
  coordinates = KML.new(kml_file)
end

if options[:kml]
  File.open(output_file, "w+") do |file|
    file.write(coordinates.to_kml)
  end
else
  File.open(output_file, "w+") do |file|
    file.write("PATH_COORDINATES = #{coordinates.to_a.to_s}")
  end
end